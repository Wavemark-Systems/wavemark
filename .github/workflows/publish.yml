name: Publish Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install maturin
      run: pip install maturin[patchelf]

    - name: Build wheels
      run: |
        cd bindings/python
        maturin build --release --out ../../dist
      env:
        MATURIN_PEP517_ARGS: --compatibility manylinux2014

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist/

  publish:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all wheels
      uses: actions/download-artifact@v3
      with:
        pattern: wheels-*
        path: dist/

    - name: Install maturin
      run: pip install maturin

    - name: Publish to PyPI
      run: maturin upload --skip-existing
      env:
        MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        MATURIN_USERNAME: ${{ secrets.PYPI_USERNAME }}
        MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
